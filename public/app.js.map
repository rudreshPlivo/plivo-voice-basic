{"version":3,"sources":["../src/app.js"],"names":["app","PORT","env","set","path","join","__dirname","use","bodyParser","urlencoded","extended","json","makecall","staticpath","express","static","get","req","res","render","error","console","log","msg","err","next","locals","message","status","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,OAAOC,cAAID,IAAjB;;AAEA;AACAD,IAAIG,GAAJ,CAAQ,aAAR,EAAsB,KAAtB;AACAH,IAAIG,GAAJ,CAAQ,OAAR,EAAgBC,eAAKC,IAAL,CAAUC,SAAV,EAAoB,OAApB,CAAhB;;AAEA;AACAN,IAAIO,GAAJ,CAAQ,sBAAO,UAAP,CAAR;;AAEA;AACAP,IAAIO,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAV,IAAIO,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEA;AACAX,IAAIO,GAAJ,CAAQ,WAAR,EAAoBK,kBAApB;;AAEA;AACA,IAAMC,aAAaT,eAAKC,IAAL,CAAUC,SAAV,EAAoB,aAApB,CAAnB;AACAN,IAAIO,GAAJ,CAAQO,kBAAQC,MAAR,CAAeF,UAAf,CAAR;;AAEA;;AAEAb,IAAIgB,GAAJ,CAAQ,GAAR,EAAY,UAACC,GAAD,EAAKC,GAAL,EAAa;AACrB,QAAI;AACAA,YAAIC,MAAJ,CAAW,OAAX;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZC,gBAAQC,GAAR,yBAAkCF,KAAlC;AACAF,YAAIP,IAAJ,CAAS;AACLY,iBAAK;AADA,SAAT;AAGH;AACJ,CATD;;AAWA;AACAvB,IAAIO,GAAJ,CAAQ,UAASiB,GAAT,EAAcP,GAAd,EAAmBC,GAAnB,EAAwBO,IAAxB,EAA8B;AAClC;AACAP,QAAIQ,MAAJ,CAAWC,OAAX,GAAqBH,IAAIG,OAAzB;AACAT,QAAIQ,MAAJ,CAAWN,KAAX,GAAmBH,IAAIjB,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCQ,GAAvC,GAA6C,EAAhE;;AAEA;AACA;;AAEA;AACAN,QAAIU,MAAJ,CAAWJ,IAAII,MAAJ,IAAc,GAAzB;AACAV,QAAIC,MAAJ,CAAW,OAAX;AACAM,SAAKD,GAAL;AACD,CAZH;;AAcE;;AAEAxB,IAAI6B,MAAJ,CAAW5B,IAAX,EAAgB,YAAM;AAClBoB,YAAQC,GAAR,0BAAmCrB,IAAnC;AACH,CAFD","file":"app.js","sourcesContent":["import express from \"express\";\nimport env from \"./config/env\";\nimport morgan from \"morgan\";\nimport path from \"path\";\nimport bodyParser from \"body-parser\";\nimport makecall from \"./routes/makecall\";\n\nconst app = express();\nconst PORT = env.PORT;\n\n//set view engine\napp.set('view engine','ejs');\napp.set('views',path.join(__dirname,'views'));\n\n//logger\napp.use(morgan(\"combined\"));\n\n//bodyparser\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(bodyParser.json());\n\n//routes\napp.use('/makecall',makecall);\n\n//static folder \nconst staticpath = path.join(__dirname,'./../static');\napp.use(express.static(staticpath));\n\n//handle root path\n\napp.get('/',(req,res) => {\n    try {\n        res.render('index');\n    } catch (error) {\n        console.log(`error in root is - ${error}`);\n        res.json({\n            msg: \"something went wrong\"\n        });\n    }\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n  \n    // add this line to include winston logging\n    //console.error(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\n  \n    // render the error page\n    res.status(err.status || 500);\n    res.render('error');\n    next(err);\n  });\n\n  //start server\n\n  app.listen(PORT,() => {\n      console.log(`listening on port - ${PORT}`);\n  });"]}